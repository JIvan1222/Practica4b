
/*
Este codigo generado se puede moficiar dependiendo como queremos nuestro servidor, en el 
ejemplo de la practica lo que nosotros hicimos fue inicializar nuestro servidor utilizando portmap
las lineas comentadas fueron lo modificado, de ahi en fuera todo es lo mismo
*/
# This is a template Makefile generated by rpcgen

# Parameters

CLIENT = suma_client
SERVER = suma_server

SOURCES_CLNT.c = 
SOURCES_CLNT.h = 
SOURCES_SVC.c = 
SOURCES_SVC.h = 
SOURCES.x = suma.x

TARGETS_SVC.c = suma_svc.c suma_server.c suma_xdr.c 
TARGETS_CLNT.c = suma_clnt.c suma_client.c suma_xdr.c 
TARGETS = suma.h suma_xdr.c suma_clnt.c suma_svc.c suma_client.c suma_server.c

OBJECTS_CLNT = $(SOURCES_CLNT.c:%.c=%.o) $(TARGETS_CLNT.c:%.c=%.o)
OBJECTS_SVC = $(SOURCES_SVC.c:%.c=%.o) $(TARGETS_SVC.c:%.c=%.o)
# Compiler flags 

CFLAGS += -g -DRPC_SVC_FG // se agrego -DRPC_SVC_FG para que RPCGEN se ejecutara en segundo plano
LDLIBS += -lnsl
RPCGENFLAGS = -C // con esta modificacion nos aseguramos de que RPCGEN genere codigo ANSI-C

# Targets 

all : $(CLIENT) $(SERVER)

$(TARGETS) : $(SOURCES.x) 
	rpcgen $(RPCGENFLAGS) $(SOURCES.x)

$(OBJECTS_CLNT) : $(SOURCES_CLNT.c) $(SOURCES_CLNT.h) $(TARGETS_CLNT.c) 

$(OBJECTS_SVC) : $(SOURCES_SVC.c) $(SOURCES_SVC.h) $(TARGETS_SVC.c) 

$(CLIENT) : $(OBJECTS_CLNT) 
	$(LINK.c) -o $(CLIENT) $(OBJECTS_CLNT) $(LDLIBS) 

$(SERVER) : $(OBJECTS_SVC) 
	$(LINK.c) -o $(SERVER) $(OBJECTS_SVC) $(LDLIBS)

 clean:
	 $(RM) core $(TARGETS) $(OBJECTS_CLNT) $(OBJECTS_SVC) $(CLIENT) $(SERVER)

